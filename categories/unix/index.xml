<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unix on Tony Lawrence</title>
    <link>http://tonylawrence.com/categories/unix/index.xml</link>
    <description>Recent content in Unix on Tony Lawrence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tonyklawrence&#34;&gt;Tony Lawrence&lt;/a&gt; 2017 - Waffly Bollocks</copyright>
    <atom:link href="http://tonylawrence.com/categories/unix/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Freeing up port 80 on Synology DSM</title>
      <link>http://tonylawrence.com/post/unix/synology/freeing-port-80/</link>
      <pubDate>Sat, 04 Feb 2017 16:45:28 +0000</pubDate>
      
      <guid>http://tonylawrence.com/post/unix/synology/freeing-port-80/</guid>
      <description>

&lt;p&gt;I recently purchased a new NAS for my home network.  My reliable ReadyNAS has been working flawlessly for the past 6 years and still going strong (if a little slow).  As I really wanted a NAS that would support docker containers I was drawn to the DS916+.&lt;/p&gt;

&lt;p&gt;So far everything has been easy to configure, launching docker containers a breeze and has generally been a great experience; apart from 1 little thing.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://tonylawrence.com/images/unix/synology/synology-ds916&amp;#43;.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;h3 id=&#34;i-want-port-80-back-please&#34;&gt;I want port 80 back please&lt;/h3&gt;

&lt;p&gt;If you are reading this post you probably already know that even though Synology DSM (disk station manager) by default uses ports &lt;code&gt;5000&lt;/code&gt; (http) and &lt;code&gt;5001&lt;/code&gt; (https) it still steals port &lt;code&gt;80&lt;/code&gt; for it&amp;rsquo;s redirecting using Nginx.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DSM ports can be changed (and is advisable) via the web UI.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, after many searches and failures I&amp;rsquo;ve come up with a solution that will free up port &lt;code&gt;80&lt;/code&gt; for your own uses and does not destroy your Synology.  I&amp;rsquo;m not going to lie, you will need to &lt;code&gt;ssh&lt;/code&gt; into your Synology, change a few system files and even maybe pray to your favourite gods, but in the end I hope you can sit back, smile and feel rewarded that you have gained back the power of port &lt;code&gt;80&lt;/code&gt; from DSM.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Just a small note, the reason I wanted port &lt;code&gt;80&lt;/code&gt; for myself is that I run &lt;a href=&#34;https://github.com/diginc/docker-pi-hole&#34;&gt;Pi-Hole&lt;/a&gt; as one of my docker containers and as it&amp;rsquo;s providing ad blocking via DNS then it needed to receive requests on port &lt;code&gt;80&lt;/code&gt; to provide empty content to replace those annoying adverts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;releasing-port-80&#34;&gt;Releasing port 80&lt;/h2&gt;

&lt;p&gt;First things to know is that all the configuration files for Nginx (the web sever DSM uses) are automatically created on every change via the UI.  So if you modify them directly, next time you switch something in the UI you changes are lost.  Damn! That’s not good.  How can we stop this from happening.&lt;/p&gt;

&lt;p&gt;Maybe if we change the source templates that are used by DSM to build the files it will then apply our changes every time.  I like the sound of that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I’ve done this on DSM 6.0 update 9.  I don’t know if I will need to re-apply this change next time I update, only time will tell.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok, I’ve led you down this little route, the anticipation building and I hear you shouting “Where are these magical files?”.  Ok, I wont keep you in suspense any longer.  The files that we will be changing can be found under &lt;code&gt;/usr/syno/share/nginx&lt;/code&gt; and are named:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server.mustache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DSM.mustache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WWWService.mustache&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://mustache.github.io/&#34;&gt;Mustache&lt;/a&gt; is a simple template language.  Don’t worry, we don’t really need to understand this to do what we need to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So if you open one of the files in your favourite editor you will find a server configuration looking something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server {
    listen 80 default_server{{#reuseport}} reuseport{{/reuseport}};
    listen [::]:80 default_server{{#reuseport}} reuseport{{/reuseport}};
    listen 443 default_server ssl{{#reuseport}} reuseport{{/reuseport}};
    listen [::]:443 default_server ssl{{#reuseport}} reuseport{{/reuseport}};

    server_name _;

    {{&amp;gt; /usr/syno/share/nginx/X-Accel}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The headings here are listing the default secure (&lt;code&gt;443&lt;/code&gt;) and insecure (&lt;code&gt;80&lt;/code&gt;) ports used to listen on.  It’s as easy as replacing the port &lt;code&gt;80&lt;/code&gt; with what you would like.  I’ve used port &lt;code&gt;81&lt;/code&gt; however &lt;code&gt;8080&lt;/code&gt; is also a good option.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server {
    listen 81 default_server{{#reuseport}} reuseport{{/reuseport}};
    listen [::]:81 default_server{{#reuseport}} reuseport{{/reuseport}};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make this change in all 3 files replacing occurrences of &lt;code&gt;80&lt;/code&gt; with your chosen port.  Now what we have done here is changed the template used to generate the Nginx configuration files, not the configuration files themselves.  So we now need to force a rebuild of these.  There is probably a terminal command to do this but I have not yet found this out.  What you can do is change any of the settings from the control panel UI and save.  This will trigger the rebuild and restart of the web server.  You can always change back the setting afterwards.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://tonylawrence.com/images/unix/synology/control-panel.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;Congratulations, you have now freed port &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t forget, if you were accessing DSM via port &lt;code&gt;80&lt;/code&gt; then you will have to update the URL with your new chosen port.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;forwarding-port-80-to-your-docker-container&#34;&gt;Forwarding port 80 to your docker container&lt;/h2&gt;

&lt;p&gt;So now that you have port &lt;code&gt;80&lt;/code&gt; to do with what you want, let’s set this up to forward all requests to a docker container.  We can do this using the reverse proxy tab in the ‘Application Portal’ section.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://tonylawrence.com/images/unix/synology/reverse-proxy.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;What I have defined above is a rule that all traffic that going to my Synology on port &lt;code&gt;80&lt;/code&gt; will be forwarded onto port &lt;code&gt;8080&lt;/code&gt;.  This port &lt;code&gt;8080&lt;/code&gt; is then mapped in docker to my pi-hole containers port &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://tonylawrence.com/images/unix/synology/reverse-proxy-rules.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;blockquote&gt;
&lt;p&gt;You may think it odd that I go from port &lt;code&gt;80&lt;/code&gt; to &lt;code&gt;8080&lt;/code&gt; and then back to &lt;code&gt;80&lt;/code&gt;.  The reason for this is that the docker UI will not allow me to use port &lt;code&gt;80&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unfortunately it isn’t quite that simple.  You see, Synology really do not want you using port &lt;code&gt;80&lt;/code&gt; so they do not allow you to choose this in the UI.&lt;/p&gt;

&lt;p&gt;So, the second “hack” we need to do is fix this.  How I did this is by creating the rule above but with a different port &lt;code&gt;12345&lt;/code&gt; and then manually updating the configuration file in a similar vane to above.  The file in question is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/usr/syno/etc/www/ReverseProxy.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This file is just a json file, unfortunately is has no formatting at all so it’s not the easiest file to read.  Here is mine (formatted so you can read it) and you can see that it shows port &lt;code&gt;12345&lt;/code&gt; in the front end section.  We can now change this to be &lt;code&gt;80&lt;/code&gt; and save the file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;64e6f8f3-6161-4e05-801b-ddb02016a166&amp;quot; : {
    &amp;quot;backend&amp;quot; : {
      &amp;quot;fqdn&amp;quot; : &amp;quot;localhost&amp;quot;,
      &amp;quot;port&amp;quot; : 8080,
      &amp;quot;protocol&amp;quot; : 0
    },
    &amp;quot;description&amp;quot; : &amp;quot;Ad Block&amp;quot;,
    &amp;quot;frontend&amp;quot; : {
      &amp;quot;fqdn&amp;quot; : null,
      &amp;quot;https&amp;quot; : null,
      &amp;quot;port&amp;quot; : 12345,
      &amp;quot;protocol&amp;quot; : 0
    }
  },
  &amp;quot;version&amp;quot; : 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have more reverse proxy rules then this file will be much larger&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next time your Nginx files are regenerated (any change to web settings) the new port number &lt;code&gt;80&lt;/code&gt; will appear in the rules rather than &lt;code&gt;12345&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;one-more-thing&#34;&gt;One more thing&lt;/h2&gt;

&lt;p&gt;This is just for the security conscious.  If you run security advisor regularly and have it to check for modified files, you will see the following warning.  Don’t worry, it’s not wrong as we have modified this file.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://tonylawrence.com/images/unix/synology/security-warning.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;You can disable this check in the applications properties but I would strongly recommend that you don’t.  For me I just ignore this warning.&lt;/p&gt;

&lt;h3 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h3&gt;

&lt;p&gt;I hope you find this useful, I decided to document this a I did not find any solutions on the internet about this.  I’m not suggesting this is the only way, or even that it doesn’t come with any drawbacks, but it’s currently working for me and has solved a nice problem.&lt;/p&gt;

&lt;p&gt;If this works for you or you even know a better way, please leave a comment below.&lt;/p&gt;

&lt;p&gt;Lastly, if you are editing system files please take care.  I don’t want to be responsible for anybody losing important data or having to reset their disk station.  If you are not sure what you are doing then please seek advice.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backing up and restoring a ReadyNAS Ultra</title>
      <link>http://tonylawrence.com/post/unix/backing-up-readynas/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tonylawrence.com/post/unix/backing-up-readynas/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve had my ReadyNAS drop of the network a couple of times, and lately has been warning me about errors on my disk 2 so I thought it was a good idea to replace that drive.  Due to the few network issues I&amp;rsquo;ve had I decided that taking the opportunity to restore the ReadyNAS was a good idea (I had messed with it quite a bit before.)&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;As I have just under 3TB used my new replacement drive would be 3TB so that I could use it for backup / restore and then as a replacement to the failing 2TB drive.&lt;/p&gt;

&lt;h2 id=&#34;initialising-the-3tb-drive-for-use&#34;&gt;Initialising the 3TB drive for use&lt;/h2&gt;

&lt;p&gt;My first big headache was that the ReadyNAS would not recognise the new drive (in an icebox usb enclosure) as 3TB and would only format it to be around 800MB, this was no use.  Also, from my Mac using Disk Utility I could create a 3TB partition but unable to format it to be ext3.  So I had to use my ReadyNAS bash skills.&lt;/p&gt;

&lt;p&gt;Firstly I found out that &lt;code&gt;fdisk&lt;/code&gt; does not support drives over 2TB so after much annoyance I gave up.  Apparently the solution is to use &lt;code&gt;parted&lt;/code&gt; which does not come on the ReadyNAS.  However, a quick &lt;code&gt;apt-get&lt;/code&gt; later and I&amp;rsquo;m away (I didn&amp;rsquo;t care about installing stuff as I was going to restore.)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apt-get install parted
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parted&#34;&gt;Parted&lt;/h2&gt;

&lt;p&gt;I followed Vivek Gites excellent guide here: &lt;a href=&#34;http://www.cyberciti.biz/tips/fdisk-unable-to-create-partition-greater-2tb.html&#34;&gt;http://www.cyberciti.biz/tips/fdisk-unable-to-create-partition-greater-2tb.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wanted a 3TB primary partition, this was to make the most of the drive.  My USB drive was available as /dev/sde.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ parted /dev/sde
GNU Parted 1.7.1
Using /dev/sde
Welcome to GNU Parted! Type &#39;help&#39; to view a list of commands.
(parted)                                           
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create the partition&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(parted) mklabel gpt
(parted) unit TB
(parted) mkpart primary 0.00TB 3.00TB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can check everything is ok using the &lt;code&gt;print&lt;/code&gt; command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(parted) print

Disk /dev/sde: 3001GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt

Number  Start   End     Size    File system  Name     Flags
 1      17.4kB  3001GB  3001GB  ext3         primary       
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To exit simple type&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(parted) quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can format the partition as &lt;code&gt;ext3&lt;/code&gt; (you can use &lt;code&gt;ext4&lt;/code&gt; if you prefer)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkfs.ext3 /dev/sde1 # for ext3
$ mkfs.ext4 /dev/sde1 # for ext4
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;doing-the-backup&#34;&gt;Doing the backup&lt;/h2&gt;

&lt;p&gt;I decided that the easiest way to backup was to use &lt;code&gt;rsync&lt;/code&gt;.  This would allow me to do small chunks at a time and also selectively restore.  I was surprised that to backup around 3TB of data (using USB and Green 5400rpm drives) took most of a weekend! (at least I could monitor the progress with the &lt;code&gt;rsync&lt;/code&gt; output and &lt;code&gt;df -h&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;For reference, I used the following command line&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rsync --progress --recursive --times --perms --human-readable &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-factory-restore&#34;&gt;The factory restore&lt;/h2&gt;

&lt;p&gt;There was two options I had when resetting my ReadyNAS firmware.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS Re-Install - reinstalls the firmware from the internal flash to the disks&lt;/li&gt;
&lt;li&gt;Factory Default - resets the unit to factory settings, erases all data, resets all defaults, and reformats the disk to X-RAID2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I had installed things I shouldn&amp;rsquo;t the re-install would not remove this mess.  I thought if I&amp;rsquo;m going to do it, I might as well clean it properly (it does mean I need to setup my add-ons again.)&lt;/p&gt;

&lt;h2 id=&#34;doing-the-restore&#34;&gt;Doing the restore&lt;/h2&gt;

&lt;p&gt;NetGear has a nice page for reference on how to enter the boot menu and what the options mean. &lt;a href=&#34;http://www.readynas.com/kb/faq/boot/how_do_i_use_the_boot_menu&#34;&gt;How do I use the Boot Menu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For my ReadyNAS Ultra 4 I had to do the following to access the boot menu:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Power off the unit.&lt;/li&gt;
&lt;li&gt;Using a straightened paper clip, press and hold the Reset button.&lt;/li&gt;
&lt;li&gt;Press the Power button to power on the unit.&lt;/li&gt;
&lt;li&gt;Continue to press the Reset button until the status display screen shows an boot menu message.&lt;/li&gt;
&lt;li&gt;Press the Backup button to scroll through the boot mode options.&lt;/li&gt;
&lt;li&gt;Press and release Reset button to confirm your boot menu selection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then wait…&lt;/p&gt;

&lt;h2 id=&#34;installing-services&#34;&gt;Installing services&lt;/h2&gt;

&lt;h3 id=&#34;enabling-ssh&#34;&gt;Enabling SSH&lt;/h3&gt;

&lt;p&gt;First thing is to download and install the SSH access plugin.  This is done the same way as any add-on.  Once this has been installed we can &lt;code&gt;ssh&lt;/code&gt; into the ReadyNAS and configure other things.  You can use the same username / password of any user you have created.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A restart is required before you can log in&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;transmission&#34;&gt;Transmission&lt;/h3&gt;

&lt;p&gt;Download and install the Transmission add-on from the ReadyNAS community forums.  Once installed you will see it available in your add-ons tab.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Transmission will not start until you have set the &lt;code&gt;download-dir&lt;/code&gt; in &lt;code&gt;settings.json&lt;/code&gt; to a valid location&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;automatic&#34;&gt;Automatic&lt;/h3&gt;

&lt;p&gt;Just like Transmission, download and install from the ReadyNAS comment forums and install in the same way.&lt;/p&gt;

&lt;h2 id=&#34;customisation&#34;&gt;Customisation&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want Mac OS X to write network stores then issue the following command on each Mac OS X client.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ defaults write com.apple.desktopservices DSDontWriteNetworkStores true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;email&#34;&gt;Email&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apt-get install courier-imap-ssl courier-maildrop courier-doc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can test with &lt;code&gt;telnet localhost 143&lt;/code&gt; to see if you can connect, you should expect a response like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCE SORT QUOTA IDLE ACL ACL2=UNION]
Courier-IMAP ready. Copyright 1998-2005 Double Precision, Inc. See COPYING for distribution information.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creating a user, location for email and then testing.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;userdb tonylawrence.com set uid=1004 gid=50 home=/c/email mail=tonylawrence.com
userdbpw -md5 | userdb tonylawrence.com set imappw
makeuserdb
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;host:/c/email# mkdir tonylawrence.com
host:/c/email# chown tony:staff tonylawrence.com/
host:/c/email# chmod 755 tonylawrence.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ telnet localhost 143
01 LOGIN &amp;lt;user&amp;gt; &amp;lt;password&amp;gt;
01 OK LOGIN Ok.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install fetch mail and mail drop to fetch and move email into our new home.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ apt-get install fetchmail courier-maildrop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mail Filter is used to place different emails into different locations.  Here I move any email to &lt;code&gt;tonylawrence.com&lt;/code&gt; into a different folder &lt;code&gt;~/.mailfilter&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;DEFAULT=&amp;quot;/c/email&amp;quot;
TL=&amp;quot;$DEFAULT/tonylawrence.com/&amp;quot;

if (/^(To|Cc|Bcc):.*@tonylawrence.com/) {
  to $TL
}

to $DEFAULT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fetchmail configuration to pull email from google mail &lt;code&gt;.fetchmailrc&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;set invisible
set bouncemail

poll &amp;quot;imap.gmail.com&amp;quot; protocol imap
  username &amp;quot;&amp;lt;user@gmail.com&amp;gt;&amp;quot;
  password &amp;quot;&amp;lt;password&amp;gt;&amp;quot;
  keep
  ssl
  mda &amp;quot;/usr/bin/maildrop -d &amp;lt;user&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then automate the fetching via cron&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export EDITOR=vi
$ crontab -e

m h  dom mon dow   command
*/2 * * * * fetchmail --pidfile /tmp/fetchmail.pid
#*/5 * * * * fetchmail &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;avahi-icons&#34;&gt;Avahi icons&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd /etc/avahi/services/
$ cat afp.service 
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; standalone=&#39;no&#39;?&amp;gt;&amp;lt;!--*-nxml-*--&amp;gt;
&amp;lt;service-group&amp;gt;
  &amp;lt;name replace-wildcards=&amp;quot;yes&amp;quot;&amp;gt;%h&amp;lt;/name&amp;gt;
  &amp;lt;service&amp;gt;
    &amp;lt;type&amp;gt;_afpovertcp._tcp&amp;lt;/type&amp;gt;
    &amp;lt;port&amp;gt;548&amp;lt;/port&amp;gt;
  &amp;lt;/service&amp;gt;
  &amp;lt;service&amp;gt;
    &amp;lt;type&amp;gt;_device-info._tcp&amp;lt;/type&amp;gt;
    &amp;lt;port&amp;gt;0&amp;lt;/port&amp;gt;
    &amp;lt;txt-record&amp;gt;model=Macmini&amp;lt;/txt-record&amp;gt;
  &amp;lt;/service&amp;gt;
&amp;lt;/service-group&amp;gt;
Patrician:/etc/avahi/services# cat timemachine.service 
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; standalone=&#39;no&#39;?&amp;gt;&amp;lt;!--*-nxml-*--&amp;gt;
&amp;lt;service-group&amp;gt;
  &amp;lt;name replace-wildcards=&amp;quot;yes&amp;quot;&amp;gt;Time Machine&amp;lt;/name&amp;gt;
  &amp;lt;service&amp;gt;
    &amp;lt;type&amp;gt;_adisk._tcp&amp;lt;/type&amp;gt;
    &amp;lt;port&amp;gt;9&amp;lt;/port&amp;gt;
    &amp;lt;txt-record&amp;gt;sys=waMA=00:22:3F:AA:2C:E1,adVF=0x100&amp;lt;/txt-record&amp;gt;
    &amp;lt;txt-record&amp;gt;dk0=adVF=0xa1,adVN=ReadyNAS,adVU=29d6becd-d614-4346-aa51-bb2f0c8fcbb2&amp;lt;/txt-record&amp;gt;
  &amp;lt;/service&amp;gt;
  &amp;lt;service&amp;gt;
    &amp;lt;type&amp;gt;_device-info._tcp&amp;lt;/type&amp;gt;
    &amp;lt;port&amp;gt;0&amp;lt;/port&amp;gt;
    &amp;lt;txt-record&amp;gt;model=TimeCapsule&amp;lt;/txt-record&amp;gt;
  &amp;lt;/service&amp;gt;
&amp;lt;/service-group&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Had to chown admin:admin on /etc/cron.d otherwise couldn&amp;rsquo;t create backups!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.readynas.com/?p=4203&#34;&gt;Root Access SSH&lt;/a&gt;
&lt;a href=&#34;http://www.readynas.com/forum/viewtopic.php?f=48&amp;amp;t=41667&#34;&gt;Automatic&lt;/a&gt;
&lt;a href=&#34;http://www.readynas.com/forum/viewtopic.php?f=48&amp;amp;t=24272&#34;&gt;Transmission&lt;/a&gt;
&lt;a href=&#34;http://www.courier-mta.org/imap&#34;&gt;Courier IMAP&lt;/a&gt;
&lt;a href=&#34;http://www.courier-mta.org/maildrop&#34;&gt;Courier MailDrop&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>