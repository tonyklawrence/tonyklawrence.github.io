<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Octopress on Tony Lawrence</title>
    <link>http://tonylawrence.com/categories/octopress/index.xml</link>
    <description>Recent content in Octopress on Tony Lawrence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/tonyklawrence&#34;&gt;Tony Lawrence&lt;/a&gt; 2017 - Waffly Bollocks</copyright>
    <atom:link href="http://tonylawrence.com/categories/octopress/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Publishing from the iCloud</title>
      <link>http://tonylawrence.com/post/blog/publishing-from-the-icloud/</link>
      <pubDate>Thu, 02 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tonylawrence.com/post/blog/publishing-from-the-icloud/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve recently been using IA Writer as my markdown editor.  I love the fact that I can use any of my iDevices and that it&amp;rsquo;s all synced in the iCloud.  But how do I access the iCloud data so that I can include it in my Octopress git repository?&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;show-me-the-data&#34;&gt;Show me the data&lt;/h2&gt;

&lt;p&gt;On Mountain Lion (and Lion I believe) all the iCloud data is hidden away in your home directory.  Each application is given it&amp;rsquo;s own area just like iOS apps.  Check out &lt;code&gt;~/Library/Mobile Documents&lt;/code&gt;, you&amp;rsquo;ll see folders for each iCloud application that you have launched.  Your files are stored in here.&lt;/p&gt;

&lt;p&gt;Once you have found your editors data folder we can now create a link from here into your git repository.  Unfortunately, symbolic links are not good enough for either iCloud or git so we&amp;rsquo;ll need to use hard links.  Mountain Lion does not ship with this tool but let&amp;rsquo;s not worry, it&amp;rsquo;s very easy to make our own.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;be careful, deleting from a hard link deletes from the source!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;creating-hard-links&#34;&gt;Creating hard links&lt;/h2&gt;

&lt;p&gt;So, at the end of this post is the complete source code to create hard links.  Copy the code into a new file named &lt;code&gt;hlink.c&lt;/code&gt; and compile it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gcc hlink.c -o hlink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can create a hard link to link our blog posts into our iCloud documents.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hlink ~/&amp;lt;octopress_dir&amp;gt;/source/_posts ~/Library/Mobile\ Documents/&amp;lt;app_dir&amp;gt;/Documents/pages
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;what-about-dropbox&#34;&gt;What about DropBox?&lt;/h2&gt;

&lt;p&gt;I did a quick comparison between the iCloud integration and DropBox.  Unfortunately, DropBox seemed to be more manual regarding the syncing.  Also, if you lose your network connection (happens to me often whilst on a train) the DropBox integration moves the document to local storage and you have to manually copy back into DropBox - not a nice feature.  iCloud seems to handle this with ease and I don&amp;rsquo;t have to install anything to get it to work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;source code for hlink&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main(int argc, char* argv[]) {
  if (argc != 3) {
    fprintf(stderr, &amp;quot;Use: hlink &amp;lt;src_dir&amp;gt; &amp;lt;target_dir&amp;gt;\n&amp;quot;);
    return 1;
  }

  int ret = link(argv[1], argv[2]);
  if (ret != 0) perror(&amp;quot;link&amp;quot;);
  return ret;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Setting up Octopress</title>
      <link>http://tonylawrence.com/post/blog/setting-up-octopress-on-osx/</link>
      <pubDate>Wed, 01 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tonylawrence.com/post/blog/setting-up-octopress-on-osx/</guid>
      <description>

&lt;p&gt;When upgrading to Mountain Lion I decided to replace my existing Wordpress site with a static one.  There were many reasons for this.  With Wordpress I was unable to easily version control my posts into GitHub.  I also had no control over and backup strategies.  One of my colleagues - &lt;a href=&#34;http://baddotrobot.com&#34;&gt;Toby Weston&lt;/a&gt; - was running Octopress so I thought I&amp;rsquo;d take a look.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Octopress is based upon Jekyll, developed and used by GitHub.com.  It uses Ruby to generate a static site, this can them be published to a multiple of hosting solutions, I have decided to use GitHub pages.  It looks elegant and can be customised using themes or changing the styles yourself (if you are familiar with html/sass.)  There are also many available plugins to extend the functionality of the site.&lt;/p&gt;

&lt;p&gt;Unfortunately, even the latest, greatest OSX 10.8 does not come with all the tools Octopress requires.&lt;/p&gt;

&lt;h4 id=&#34;requirements-not-met-by-mountain-lion&#34;&gt;Requirements not met by Mountain Lion&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Ruby version is out of date, requires &amp;gt;= 1.9.3&lt;/li&gt;
&lt;li&gt;Ruby Bundler is missing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You&amp;rsquo;d think it would be very easy to upgrade Ruby, I found out that this was not the case.  The easiest way is to use a tool named RVM (ruby version manager) but this is only currently available in source for which needs compiling.  Don&amp;rsquo;t worry, this is quite trivial once you have the tools at hand.&lt;/p&gt;

&lt;h4 id=&#34;tools-required-by-rvm&#34;&gt;Tools required by RVM&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Some sort of C compiler (if you have Xcode, you&amp;rsquo;ll be ok)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If like me you like to keep your mac clutter free you&amp;rsquo;ll never be happy installing the mammoth Xcode.  There is a solution, Apple have separated out their developer tools into a small packages that is quick to download and install.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;So, let&amp;rsquo;s get on with the setup.  First we can install those command line tools from: &lt;a href=&#34;https://developer.apple.com/downloads/index.action&#34;&gt;Apple Developer Tools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we install the Ruby Version Manager:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bash -s stable &amp;lt; &amp;lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And use it to update Ruby.  I&amp;rsquo;m going to update to the latest version available at the time of writing, this is 1.9.3.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;to start using RVM in your current terminal session you need to run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;source ~/.rvm/scripts/rvm&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rvm install 1.9.3
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;if you choose version &amp;lt;= 1.9.2 you must specify &amp;ndash;with-gcc=clang otherwise it will not install.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;

&lt;p&gt;Ok, that&amp;rsquo;s our Mac up to date, now it&amp;rsquo;s time to look at Octopress.&lt;/p&gt;

&lt;p&gt;Octopress lives on GitHub so it&amp;rsquo;s really easy for us to pull our own version and keep up with the latest enhancements.  Decide where you want it to live then clone yourself a copy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git://github.com/imathis/octopress.git &amp;lt;dir&amp;gt;
$ cd &amp;lt;dir&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;you&amp;rsquo;ll be asked if you trust the .rvmrc file, all this will do is switch to the required version of Ruby.  If you didn&amp;rsquo;t install ruby 1.9.3 you will need to update the .rvmrc to require your version to prevent any warnings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ruby --version # should report your Ruby version &amp;gt;= 1.9.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once we&amp;rsquo;ve installed the required bundler we are ready to go.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install bundler
$ bundle install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the default Octopress theme&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rake install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create 2 directories, one for sass and another for source.  We should now commit these into out repository.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add sass source
$ git commit -m &amp;quot;Added initial theme&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;rewards&#34;&gt;Rewards&lt;/h3&gt;

&lt;p&gt;And now we can run up a local version to test the install.  Run the following command and head to &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt; to see your new Octopress site.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rake preview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You now have a full install of Octopress and can start blogging.  I&amp;rsquo;d advise you to head over to their deployment site for options and guides on how to publish.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>